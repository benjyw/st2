name: Service Examples

on:
  push:
    branches:
    - gha-service

jobs:
# Runs all steps on the VM
# The service containers will use host port binding instead of container networking so you access them via localhost rather than the service name
  mongodb-job-on-vm:  # must be a container to restart service containers.
    runs-on: ubuntu-latest

    services:
      mongodb:
        # We use bitnami to facilitate reconfiguring during the tests.
        # Many images require config in env vars (which we can't change during the test job)
        # or they require config in entrypoint args (which we can't override for GHA services)
        # bitnami builds ways to get config files from mounted volumes.
        image: bitnami/mongodb
        # MONGODB_MOUNTED_CONF_DIR defaults to /bitnami/conf (/bitnami is the MONGODB_VOLUME_DIR)
        volumes:
          - /home/runner/mongodb_conf:/bitnami/conf

        ports:
        # will assign a random free host port
        - 27017/tcp

        # These are strictly docker options, not entrypoint args (GHA restriction)
        options: >-
          --name mongodb

    steps:
    - name: backup the mongodb.conf file
      # we let root group write to this dir so that we can write to it inside the container
      run: |
        sudo chmod g+w /home/runner/mongodb_conf
        docker exec mongodb cp /opt/bitnami/mongodb/conf/mongodb.conf /bitnami/conf/mongodb.conf.orig

    - name: print job context vars
      run: echo ${MONGODB_HOST}:${MONGODB_PORT} id=${MONGODB_ID} net=${MONGODB_NETWORK}
      env:
        # use localhost for the host here because we are running the job on the VM.
        # If we were running the job on in a container this would be mongodb
        MONGODB_HOST: localhost
        MONGODB_PORT: ${{ job.services.mongodb.ports[27017] }} # get randomly assigned published port
        MONGODB_ID: ${{ job.services.mongodb.id }}
        MONGODB_NETWORK: ${{ job.services.mongodb.network }}

    - name: drop mongod.conf in /home/runner/mongodb_conf, and it will overwrite /opt/bitnami/mongodb/conf/mongod.conf
      run: |
        echo actually this will just touch example_file, not replace mongod.conf
        docker exec mongodb ls -la /opt/bitnami/mongodb/conf /bitnami/conf
        sudo touch /home/runner/mongodb_conf/example_file

    - name: restart mongodb service container (eg after changing config)
      run: docker restart mongodb

    - name: wait for mongodb
      timeout-minutes: 2
      # for a container without a HEALTHCHECK
      run: until [ "$(docker inspect -f {{.State.Running}} mongodb)" == "true" ]; do sleep 0.1; done
      # for a container with a HEALTHCHECK
      # run: until [ "$(docker inspect -f {{.State.Health.Status}} mongodb)" == "healthy" ]; do sleep 0.1; done

    - name: show the dropped example_file in /home/runner/mongodb_conf
      run: docker exec mongodb ls -la /opt/bitnami/mongodb/conf /bitnami/conf

    - name: show the mongodb.conf file
      run: docker exec mongodb cat /opt/bitnami/mongodb/conf/mongodb.conf
